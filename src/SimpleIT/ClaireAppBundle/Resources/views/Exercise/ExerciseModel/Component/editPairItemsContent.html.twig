<h2>Edition d'appariement d'objets</h2>
{% if locked %}<div>Édition vérouillée</div>{% endif %}

<form class="js-ajax-form" action="{{ path('simple_it_claire_component_exercise_exercise_model_content_edit',{ 'exerciseModelId': exerciseModel.id}) }}" method="post">
    <input type="hidden" name="model-type" value="pair-items">

    <div>
        <label>Consigne :
            <input type="text" size="200" name="wording" id="wording" value="{{ exerciseModel.content.wording }}"/>
        </label>
    </div>

    {% include '@SimpleITClaireApp/Exercise/ExerciseModel/Component/include/documents.html.twig'
    with {'documents' : exerciseModel.content.documents} %}

    <div id="blocks">
        <div>
            <!--TODO-->
            <input type="button" value="Ajouter bloc"/>
        </div>

        {% set _cptBlock = 0 %}
        {% for block in exerciseModel.content.pairBlocks %}
            <div class="block">
                <div>
                    <button type="button" class="js-remove-block">Supprimer bloc</button>
                </div>
                <div>
                    <h3>Bloc n° {{ _cptBlock + 1 }}</h3>
                    <label>Clé de la métadonnée utilisée pour créer la partie mobile
                        <input required type="text" size="20" name="blocks[{{ _cptBlock }}][metaKey]" value="{{ block.pairMetaKey }}"/>
                    </label>

                    <h3>Ressources du bloc</h3>

                    {% include '@SimpleITClaireApp/Exercise/ExerciseModel/Component/include/objectBlock.html.twig' with {
                    'objectName' : 'objets',
                    'resourcesName' : 'resources',
                    'blocksName' : 'blocks',
                    'keyName' : 'key',
                    'comparatorName' : 'comparator',
                    'valuesName' : 'values',
                    'excludedName' : 'excluded',
                    'typeName' : 'type',
                    '_cptBlock' : _cptBlock,
                    'block' : block,
                    'askType' : true
                    } %}

                </div>
            </div>
            {% set _cptBlock = _cptBlock + 1 %}
        {% endfor %}
    </div>
    <input type="submit"/>
</form>

<script>
    $(function () {
        $('.block').on('click', '.js-remove-block', function (event) {
            $(event.target).closest('.block').remove();
        })
    });

    $(function () {
        $('.resourceList').on('click', '.js-add-resource', function (event) {
            var $table = $(event.target).closest('table'),
                    $lines = $('tr', $table),
                    $last = $lines.last(),
                    $clone = $last.clone();

            $clone
                    .find('input[type=text]')
                    .val('');

            $clone.appendTo($table);
        })
    });

    $(function () {
        $('.resourceList').on('click', '.js-remove-resource', function (event) {
            $(event.target).closest('tr').remove();
        })
    });


    $(function () {
        $('.constrBloc').on('click', '.js-add-value', function (event) {
            var $line = $(event.target).closest('tr'),
                    $tds = $('td', $line),
                    $last = $tds.last(),
                    $clone = $last.clone();

            $clone
                    .find('input[type=text]')
                    .val('');

            $clone.appendTo($line);
        })
    });

    $(function () {
        $('.constrBloc').on('click', '.js-remove-value', function (event) {
            $(event.target).closest('td').remove();
        })
    });

    $(function () {
        $('.constrBloc').on('click', '.js-add-constraint', function (event) {
            var $table = $(event.target).closest('table'),
                    $lines = $('tr', $table),
                    $last = $lines.last(),
                    $inputText = $last.find('input[type=text]'),
                    $clone = $last.clone(),
                    blockId = ($inputText.length > 0) ? ($inputText.attr('name').match(/\[([0-9]+)\]\[/))[1] : 0,
                    prevId = ($inputText.length > 0) ? ($inputText.attr('name').match(/\[([0-9]+)\]$/))[1] : 0;


            prevId = parseInt(prevId, 0);
            blockId = parseInt(blockId, 0);

            // key
            $clone
                    .find('input[class=key]')
                    .attr('name', 'key[' + blockId + '][' + (prevId + 1) + ']')
                    .val('');

            // comparator
            $clone
                    .find('select[class=comparator]')
                    .attr('name', 'comparator[' + blockId + '][' + (prevId + 1) + ']')
                    .val('');

            // values
            $clone
                    .find('input[class=values]')
                    .attr('name', 'values[' + blockId + '][' + (prevId + 1) + '][]')
                    .val('');

            $clone.appendTo($table);
        })
    });

    $(function () {
        $('.constrBloc').on('click', '.js-remove-constraint', function (event) {
            $(event.target).closest('tr').remove();
        })
    });


    $(function () {
        $('.constrBloc').on('click', '.js-add-classifConstraint', function (event) {
            var $table = $(event.target).closest('table'),
                    $lines = $('tr', $table),
                    $last = $lines.last(),
                    $inputText = $last.find('input[class=key]'),
                    $clone = $last.clone(),
                    blockId = ($inputText.length > 0) ? ($inputText.attr('name').match(/y\[(.+)\]\[[0-9]+\]\[[0-9]+\]/))[1] : 0,
                    groupId = ($inputText.length > 0) ? ($inputText.attr('name').match(/\]\[([0-9]+)\]\[/))[1] : 0,
                    prevId = ($inputText.length > 0) ? ($inputText.attr('name').match(/\[([0-9]+)\]$/))[1] : 0;


            prevId = parseInt(prevId, 0);

            // key
            $clone
                    .find('input[class=key]')
                    .attr('name', 'classifKey[' + blockId + '][' + groupId + '][' + (prevId + 1) + ']')
                    .val('');

            // comparator
            $clone
                    .find('select[class=comparator]')
                    .attr('name', 'classifComparator[' + blockId + '][' + groupId + '][' + (prevId + 1) + ']')
                    .val('');

            // values
            $clone
                    .find('input[class=values]')
                    .attr('name', 'classifValues[' + blockId + '][' + groupId + '][' + (prevId + 1) + '][]')
                    .val('');

            $clone.appendTo($table);
        })
    });

    $(function () {
        $('.grouping-criteria').on('click', '.js-add-group', function (event) {
            var $table = $(event.target).closest('table'),
                    $lines = $('.grouping-group', $table),
                    $last = $lines.last(),
                    $clone = $last.clone(true, true),
                    $inputText = $last.find('input[class=group-name]'),
                    blockId = ($inputText.length > 0) ? ($inputText.attr('name').match(/group\[(.+)\]\[[0-9]+\]/))[1] : 0,
                    groupId = ($inputText.length > 0) ? ($inputText.attr('name').match(/group\[.+\]\[([0-9]+)\]/))[1] : 0;


            groupId = parseInt(groupId, 0) + 1;

            // group name
            $clone
                    .find('input[class=group-name]')
                    .attr('name', 'group[' + blockId + '][' + groupId + ']')
                    .val('');

            // only one classif tr
            var $classifTrs = $('.classifTr', $clone),
                    $i,
                    $length = $classifTrs.length;
            for ($i = 1; $i < $length; $i++) {
                console.error($i);
                $classifTrs[$i].remove();
            }

            // key
            $clone
                    .find('input[class=key]')
                    .attr('name', 'classifKey[' + blockId + '][' + groupId + '][0]')
                    .val('');

            // comparator
            $clone
                    .find('select[class=comparator]')
                    .attr('name', 'classifComparator[' + blockId + '][' + groupId + '][0]')
                    .val('');

            // values
            $clone
                    .find('input[class=values]')
                    .attr('name', 'classifValues[' + blockId + '][' + groupId + '][0][]')
                    .val('');


            $clone.appendTo($table);
        })
    });

    $(function () {
        $('.grouping-criteria').on('click', '.js-remove-group', function (event) {
            $(event.target).closest('tr').remove();
        })
    });
</script>
